1. định nghĩa
   Struct là một kiểu dữ liệu bao gồm nhiều thành phần có thể thuộc nhiều kiểu dữ liệu khác nhau. Các thành phần được truy nhập thông qua một tên.
nó bao gồm các mẫu dữ liệu (không nhất thiết cùng kiểu) được nhóm lại với nhau.

cú pháp:
	struct [tên] 
  {
      // các thành phần
		
		};

 	Ví dụ:
struct cat 
{   
                        char bk_name [25];
                        char author [20];
                        int edn;
                        float price;
 };       



Ngoài ra, việc định nghĩa cấu trúc mới sẽ tạo ra kiểu dữ liệu mới cho phép 
người dùng sử dụng chúng để khai báo các biến kiểu cấu trúc.

cú pháp:
 typedef struct {
    
		// các thành phần  	

} tên kiểu ;

cách khai báo biến theo kiểu dữ liệu struct:

struct [tên struct] biến;

VD:
struct cat books2; 

  (cat là tên struct)   ( books2 là tên biến)


2. Truy cập phần tử của cấu trúc

Các phần tử của cấu trúc được truy cập thông qua việc sử dụng toán tử chấm (.),
 toán tử này còn được gọi là toán tử thành viên – membership.
 
Cú pháp:
structure_name.element_name

 Ví dụ:
scanf(“%s”, books1.bk_name);


3. Gán sử dụng cấu trúc

Có thể sử dụng câu lệnh gán đơn giản để gán giá trị của một biến cấu trúc cho một biến khác có cùng kiểu
 Chẳng hạn, nếu books1 và books2 là các biến cấu trúc có cùng kiểu, thì câu lệnh sau là hợp lệ

books2 = books1;



trong ngôn ngữ lập trình C, chúng ta thường sử dụng kiểu dữ liệu struct để tạo ra một
danh sách liên kết - một cấu trúc dùng để lưu trữ dữ liệu tùy theo nhu cầu của người dùng.
chẳng hạn như: lưu trữ tên, mssv, ngày sinh, địa chỉ nhà,...

Danh sách liên kết đơn (Single Linked List) là một danh sách liên kết
 gồm nhiều  phần tử mà mỗi phần tử đều liên kết với phần tử đúng sau nó. 
mỗi  phần tử là một đối tượng struct (hay còn được gọi là một "nút") liên kết với nhau thông qua con trỏ.

Dưới đây là một ví dụ định nghĩa cấu trúc của một nút trong danh sách liên kết đơn:


struct ListNode {
    int val;  // giá trị của nút
    struct ListNode *next;  // con trỏ tới nút tiếp theo trong danh sách
};


Trong đoạn code trên, struct ListNode là tên của kiểu dữ liệu, 
val là một trường (field) kiểu int chứa giá trị của nút, 
next là một trường kiểu con trỏ (pointer) trỏ tới nút tiếp theo trong danh sách.

Sử dụng kiểu dữ liệu struct, chúng ta có thể tạo ra một danh sách 
liên kết đơn bằng cách kết hợp các nút với nhau bằng con trỏ next.



chức năng của struct là để lưu trữ dữ liệu.
							cho phép bạn quản lý nhiều biến liên quan đến nhau bằng cách sử 
dụng một biến struct duy nhất

ngoài ra, ta còn có thể lồng struct vào một struct khác
vd :

typedef struct{
	int a;
	int b;
	struct Hop c;		ở dòng này, ta khai báo một biến c có kiểu struct là Hop

} Hop;

lưu ý: ko viết là

typedef struct{
	
	int a;
	int b;
    Hop c;	vì code chạy từ trên xuống, nếu gặp dòng này nó sẽ báo lỗi dù ta hiểu c có kiểu Hop

} Hop;




